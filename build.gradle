buildscript {
    ext.kotlin_version = '1.0.3'
    ext.dokka_version = '0.9.9'

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group 'org.rs3vans'
version '1.0-SNAPSHOT'

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testCompile 'junit:junit:4.12'
}

dokka {
    moduleName = 'krypto'
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
    processConfigurations = ['compile']
    linkMapping {
        dir = 'src/main/kotlin'
        url = 'https://github.com/cy6erGn0m/vertx3-lang-kotlin/blob/master/src/main/kotlin'
        suffix = '#L'
    }
    sourceDirs = files('src/main/kotlin')
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'krypto'
        userOrg = user
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/rs3vans/krypto.git'
        version {
            name = project.version
            desc = 'Krypto - ' + project.version
            vcsTag = project.version
        }
    }
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task dokkaJar(type: Jar, dependsOn: dokkaJavadoc) {
    from dokkaJavadoc.outputDirectory
    classifier = 'javadoc'
}

artifacts {
    archives sourcesJar, dokkaJar
}